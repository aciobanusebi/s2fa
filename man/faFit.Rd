% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/faFit.R
\name{faFit}
\alias{faFit}
\title{Fit FA to data via EM/FA}
\usage{
faFit(X_t_unsupervised, paramsNULL_nDimZ, params = NULL, type = "fa",
  lambdaRidge = 0, checkArgs = TRUE, checkPositiveDefinite = FALSE,
  epsilon = 1e-10, maxIterations = 100, stopType = "parameter",
  turboEmMethods = NULL)
}
\arguments{
\item{X_t_unsupervised}{train input data as design matrix (must be matrix, not data.frame), i.e. row = instance, column = feature/attribute}

\item{paramsNULL_nDimZ}{how many latent factors to consider; taken into consideration iff params is null}

\item{params}{initialization parameters; can be NULL if no parameters are to be provided; check fitFaInit function if you want to set this}

\item{type}{"unconstrained", "fa", or "ppca"; refers to psi}

\item{lambdaRidge}{L2 regularization term; must be a number}

\item{checkArgs}{whether to check the arguments are valid; it takes more time to execute}

\item{checkPositiveDefinite}{whether to check the covariance matrices are valid; it takes more time to execute}

\item{epsilon}{tolerance parameter regarding iteration stop; the stop criterion is something like this: if |old-new|/|old| < epsilon then STOP, where old, new are loglikelihoods (|a| is module) or parameters (|a| is L2 norm squared); this last part is controlled via "stopType" parameter}

\item{maxIterations}{maximum number of iterations}

\item{stopType}{"parameter" or "objfn"}

\item{turboEmMethods}{if it is NULL, then a plot of log-likelihoods is provided; if it is not NULL, it must be a vector of methods accepted in the 'turboEM' package, e.g. c("em","squarem","pem"), and, in this case, the parameters corresponding to the first method in turboEmMethods are returned; additional information may be printed}
}
\value{
final parameters learnt by EM/FA, i.e. a list containing nDimX, nDimZ, type, mu_t, lambda_t, psi_t. "_t" comes from "transpose"
}
\description{
Fit FA to data via EM/FA
}
\examples{

params <- faFit(X_t_unsupervised = house[,-1,drop=FALSE],
paramsNULL_nDimZ = 1,
             params=NULL,
             type="fa",
             lambdaRidge=0,
             checkArgs=FALSE,
             checkPositiveDefinite=FALSE,
             epsilon=1e-10,
             maxIterations=100,
             stopType="objfn",
             turboEmMethods=NULL)
params

params0 <- faInit(X_t_unsupervised = house[,-1,drop=FALSE],
               nDimZ=1,
               type = "fa",
               checkArgs = TRUE)
params <- faFit(X_t_unsupervised = house[,-1,drop=FALSE],
             paramsNULL_nDimZ = NULL,
             params=params0,
             type="fa",
             lambdaRidge=0,
             checkArgs=FALSE,
             checkPositiveDefinite=FALSE,
             epsilon=1e-10,
             maxIterations=100,
             stopType="parameter",
             turboEmMethods=c("em","pem"))
params
}
