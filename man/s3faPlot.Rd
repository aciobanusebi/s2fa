% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s3faPlot.R
\name{s3faPlot}
\alias{s3faPlot}
\title{Plot the resulted S3FA hyperplane}
\usage{
s3faPlot(X_t, Z_t, p, color = "red", add = FALSE, addPoints = FALSE,
  pointsColor = "black", addLr = FALSE, lrColor = "blue",
  checkArgs = TRUE, checkPositiveDefinite = FALSE)
}
\arguments{
\item{X_t}{a matrix representing the input points to be plotted (if addPoints is TRUE); usually, the supervised training input}

\item{Z_t}{a matrix representing the output = values of function in input points; usually, the supervised training output}

\item{p}{parameters of a fitted S3FA}

\item{color}{color of the hyperplane given by S3FA}

\item{add}{add this plot to an already existing plot?}

\item{addPoints}{whether to plot the points X_t, Z_t}

\item{pointsColor}{color of points}

\item{addLr}{fit and add a linear regression model on plot?}

\item{lrColor}{color of linear regression hyperplane}

\item{checkArgs}{whether to check the arguments are valid; it takes more time to execute}

\item{checkPositiveDefinite}{whether to check the covariance matrices are valid; it takes more time to execute}
}
\description{
Works only if input is 1- or 2-dimensional and output is 1-dimensional.
}
\examples{
params <- s3faFit(X_t_supervised = house[1:10,2,drop=FALSE],
                  Z_t_supervised = house[1:10,1,drop=FALSE],
                  X_t_unsupervised = house[11:20,2,drop=FALSE],
                  params=NULL,
                  type="fa",
                  lambdaRidge=0,
                  checkArgs=FALSE,
                  checkPositiveDefinite=FALSE,
                  epsilon=1e-10,
                  maxIterations=100,
                  stopType="objfn",
                  turboEmMethods=NULL)
s3faPlot(X_t=house[1:10,2,drop=FALSE],
         Z_t=house[1:10,1,drop=FALSE],
         p=params,
         color="red",
         add=FALSE,
         addPoints=TRUE,
         pointsColor="black",
         addLr=TRUE,
         lrColor="blue",
         checkArgs=TRUE,
         checkPositiveDefinite=FALSE)

params <- s3faFit(X_t_supervised = house[1:10,2:3,drop=FALSE],
                  Z_t_supervised = house[1:10,1,drop=FALSE],
                  X_t_unsupervised = house[11:20,2:3,drop=FALSE],
                  params=NULL,
                  type="fa",
                  lambdaRidge=0,
                  checkArgs=FALSE,
                  checkPositiveDefinite=FALSE,
                  epsilon=1e-10,
                  maxIterations=100,
                  stopType="objfn",
                  turboEmMethods=NULL)
s3faPlot(X_t=house[1:10,2:3,drop=FALSE],
         Z_t=house[1:10,1,drop=FALSE],
         p=params,
         color="red",
         add=FALSE,
         addPoints=TRUE,
         pointsColor="black",
         addLr=TRUE,
         lrColor="blue",
         checkArgs=TRUE,
         checkPositiveDefinite=FALSE)

}
